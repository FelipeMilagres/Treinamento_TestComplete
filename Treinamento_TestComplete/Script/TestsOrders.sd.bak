uses
  AppUtils,  
  MainPage,
  OrderPage,
  GeradorUtils,
  AssertUtils;  
  
var
  count : int;  
  
procedure TesteValidarPrecoTotal;
const
  InformacoesProdutos = Project.Variables.InformacoesProdutos;
begin
  //Before
  AppOrdersRun;
  AcessarMenu('Orders|New order...');
  
  for count := 0 to InformacoesProdutos.RowCount - 1 do
  begin
    EscolherProduto(InformacoesProdutos.Produto[count]);
    DigitarQuantidade(InformacoesProdutos.Quantidade[count]);  
    AssertUtils.equals(InformacoesProdutos.ValorTotal[count], obterValorTotal);
  end;
  
  //After
  AppOrdersClose;
end;

procedure TesteValidarDescontoPorQuantidade;
var
  ArquivoCSV : OleVariant;
begin
  ArquivoCSV := DDT.CSVDriver('C:\Temp\InformacoesDesconto.csv');

  //Before
  AppOrdersRun;
  AcessarMenu('Orders|New order...'); 
  
  while not ArquivoCSV.EOF do
  begin
    EscolherProduto(ArquivoCSV.Value['Produto']);
    DigitarQuantidade(ArquivoCSV.Value['Quantidade']);  
    AssertUtils.equals(ArquivoCSV.Value['Desconto'], ObterValorDesconto);
    ArquivoCSV.Next;
  end;
  
  //After
  AppOrdersClose;
end;

procedure TesteCadastroEncomenda;
begin
  //Before
  AppOrdersRun;
  AcessarMenu('Orders|New order...');
  
  EscolherProduto('FamilyAlbum');
  DigitarQuantidade('5');
  DigitarData(DataAtual);
  DigitarNome('Felipe');
  DigitarEndereco('Rua doze');
  DigitarCidade('Sarzedo');
  DigitarEstado('Minas');
  DigitarCEP('32.450-000');  
  SelecionarCartao('American Express');
  DigitarNumeroCartao('1111222233334444');
  DigitarDataExpiracao('15/09/2020');
  ClicarOK;
  
  AssertUtils.isTrue(PesquisarNomeGrid('Felipe'));
  
  //After
  AppOrdersClose;
end;

procedure TesteEditarCadastroEncomenda;
begin
  //Before
  AppOrdersRun;
  AcessarMenu('Orders|New order...');
  
  EscolherProduto('FamilyAlbum');
  DigitarQuantidade('5');
  DigitarData(DataAtual);
  DigitarNome('Felipe');
  DigitarEndereco('Rua doze');
  DigitarCidade('Sarzedo');
  DigitarEstado('Minas');
  DigitarCEP('32.450-000');  
  SelecionarCartao('American Express');
  DigitarNumeroCartao('1111222233334444');
  DigitarDataExpiracao('15/09/2020');
  ClicarOK;
  EditarEncomendada('Felipe','FamilyAlbum');
  DigitarNome('Paulo');
  ClicarOK;
  
  AssertUtils.isTrue(PesquisarNomeGrid('Paulo'));
  
  //After
  AppOrdersClose;
end;

procedure TesteExcluirCadastroEncomenda;
begin
  //Before
  AppOrdersRun;
  AcessarMenu('Orders|New order...');
  
  EscolherProduto('FamilyAlbum');
  DigitarQuantidade('5');
  DigitarData(DataAtual);
  DigitarNome('Felipe');
  DigitarEndereco('Rua doze');
  DigitarCidade('Sarzedo');
  DigitarEstado('Minas');
  DigitarCEP('32.450-000');  
  SelecionarCartao('American Express');
  DigitarNumeroCartao('1111222233334444');
  DigitarDataExpiracao('15/09/2020');
  ClicarOK;
  ExcluirEncomendada('Felipe', 'FamilyAlbum');
  
  AssertUtils.isFalse(PesquisarNomeGrid('Felipe'));
  
  //After
  AppOrdersClose;
end;